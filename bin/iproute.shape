#!/bin/bash

. ./iproute.cfg

#kbit
ROOTCEIL0=12000
ROOTCEIL1=1000
ROOTCEIL2=2000

DAILYRATE0=10000
DAILYRATE1=900
DAILYRATE2=1800

CHANELS=20

BASE0=$[$ROOTCEIL0/CHANELS/2]
BASE1=50
BASE2=500
CEIL0=3000
CEIL1=500
CEIL2=1000
  
shape_start(){
    tc qdisc add dev $IF0 root handle 1: htb default 20
    tc qdisc add dev $IF1 root handle 1: htb default 20
    tc qdisc add dev $IF2 root handle 1: htb default 20
    
    tc class add dev $IF0 parent 1: classid 1:1 htb rate ${ROOTCEIL0}kbit
    tc class add dev $IF1 parent 1: classid 1:1 htb rate ${ROOTCEIL1}kbit
    tc class add dev $IF2 parent 1: classid 1:1 htb rate ${ROOTCEIL2}kbit
    
# ping & me    
    tc class add dev $IF0 parent 1:1 classid 1:10 htb rate ${ROOTCEIL0}kbit ceil ${ROOTCEIL0}kbit prio 0
    tc class add dev $IF1 parent 1:1 classid 1:10 htb rate ${ROOTCEIL1}kbit ceil ${ROOTCEIL1}kbit prio 0
    tc class add dev $IF2 parent 1:1 classid 1:10 htb rate ${ROOTCEIL2}kbit ceil ${ROOTCEIL2}kbit prio 0

# traf based
    tc class add dev $IF0 parent 1:1 classid 1:20 htb rate $[$ROOTCEIL0/2]kbit ceil ${ROOTCEIL0}kbit prio 1
    tc class add dev $IF1 parent 1:1 classid 1:20 htb rate $[$ROOTCEIL1/2]kbit ceil ${ROOTCEIL1}kbit prio 1
    tc class add dev $IF2 parent 1:1 classid 1:20 htb rate $[$ROOTCEIL2/2]kbit ceil ${ROOTCEIL2}kbit prio 1
    
# daily    
    tc class add dev $IF0 parent 1:1 classid 1:30 htb rate ${DAILYRATE0}kbit ceil ${ROOTCEIL0}kbit prio 2
    tc class add dev $IF1 parent 1:1 classid 1:30 htb rate ${DAILYRATE1}kbit ceil ${ROOTCEIL1}kbit prio 2
    tc class add dev $IF2 parent 1:1 classid 1:30 htb rate ${DAILYRATE2}kbit ceil ${ROOTCEIL2}kbit prio 2

#sub daily
    for i in $(seq 31 $[$CHANELS+31]); do
        tc class add dev $IF0 parent 1:30 classid 1:$i htb rate ${BASE0}kbit ceil ${CEIL0}kbit
        tc class add dev $IF1 parent 1:30 classid 1:$i htb rate ${BASE1}kbit ceil ${CEIL1}kbit
        tc class add dev $IF2 parent 1:30 classid 1:$i htb rate ${BASE2}kbit ceil ${CEIL2}kbit
    done

    tc qdisc add dev $IF0 parent 1:10 handle 10:0 sfq perturb 10
    tc qdisc add dev $IF1 parent 1:10 handle 10:0 sfq perturb 10
    tc qdisc add dev $IF2 parent 1:10 handle 10:0 sfq perturb 10

    tc qdisc add dev $IF0 parent 1:20 handle 20:0 sfq perturb 10
    tc qdisc add dev $IF1 parent 1:20 handle 20:0 sfq perturb 10
    tc qdisc add dev $IF2 parent 1:20 handle 20:0 sfq perturb 10

    tc filter add dev $IF0 parent 1:0 protocol ip prio 0 handle 10 fw flowid 1:10
    tc filter add dev $IF1 parent 1:0 protocol ip prio 0 handle 10 fw flowid 1:10
    tc filter add dev $IF2 parent 1:0 protocol ip prio 0 handle 10 fw flowid 1:10

    tc filter add dev $IF0 parent 1:0 protocol ip prio 0 handle 20 fw flowid 1:20
    tc filter add dev $IF1 parent 1:0 protocol ip prio 0 handle 20 fw flowid 1:20
    tc filter add dev $IF2 parent 1:0 protocol ip prio 0 handle 20 fw flowid 1:20

    tc filter add dev $IF0 parent 1:0 protocol ip prio 0 handle 30 fw flowid 1:30
    tc filter add dev $IF1 parent 1:0 protocol ip prio 0 handle 30 fw flowid 1:30
    tc filter add dev $IF2 parent 1:0 protocol ip prio 0 handle 30 fw flowid 1:30

    for i in $(seq 31 $[$CHANELS+31]); do
        tc filter add dev $IF0 parent 1:0 protocol ip prio 0 handle $i fw flowid 1:$i
        tc filter add dev $IF1 parent 1:0 protocol ip prio 0 handle $i fw flowid 1:$i
        tc filter add dev $IF2 parent 1:0 protocol ip prio 0 handle $i fw flowid 1:$i
    done
}


shape_stop(){
    tc qdisc del dev $IF0 root    2> /dev/null > /dev/null
    tc qdisc del dev $IF1 root    2> /dev/null > /dev/null
    tc qdisc del dev $IF2 root    2> /dev/null > /dev/null
}

shape_status(){
    echo "----------------------------------------------------------------- [qdisc in ($IF0)]"
    tc -s -d qdisc show dev $IF0
    echo
    echo "[class in]"
    tc -s -d class show dev $IF0
    echo
    echo "[filter in]"
    tc -s filter show dev $IF0
    echo
    echo "----------------------------------------------------------------- [qdisc in ($IF1)]"
    tc -s -d qdisc show dev $IF1
    echo
    echo "[class out]"
    tc -s -d class show dev $IF1
    echo
    echo "[filter out]"
    tc -s filter show dev $IF1
    echo
    echo "----------------------------------------------------------------- [qdisc in ($IF2)]"
    tc -s -d qdisc show dev $IF2
    echo
    echo "[class out]"
    tc -s -d class show dev $IF2
    echo
    echo "[filter out]"
    tc -s filter show dev $IF2
    echo
}
        
  